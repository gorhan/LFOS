abstract xor objective_purpose
    maxi
    mini

abstract or time_related_objective_criteria
    makespan
    tardiness
    earliness
    lateness
    centering

abstract or resource_related_objective_criteria
    power_consumption_criteria
    utilization_criteria
    throughput_criteria


abstract or abstract_objective_criteria
    task_related_user_defined_criteria
    resource_related_user_defined_criteria

abstract task_related_objective
    task_objective_purpose : objective_purpose
    or criteria
        `time_related_objective_criteria
        `abstract_objective_criteria
            [ task_related_user_defined_criteria && ! resource_related_user_defined_criteria]

abstract resource_related_objective
    resource_objective_purpose : objective_purpose
    or criteria
        `resource_related_objective_criteria
        `abstract_objective_criteria
            [ ! task_related_user_defined_criteria && resource_related_user_defined_criteria]

abstract global_objective
    purpose : objective_purpose
    or criteria
        `time_related_objective_criteria
        `resource_related_objective_criteria
        `abstract_objective_criteria

abstract resource
    capacity
    resource_type
        xor abstraction
            ACTIVE
            PASSIVE
            COMPOSITE
        identifier
    xor mode
        shared
        or exclusive
            capacity_based
            semantic_based
    power_consumption
        xor scalable ?
            discrete
            continuous
        [scalable => resource_type.abstraction.ACTIVE]
    resource_objective : resource_related_objective ?

abstract timing
    release_time
    execution_time
    deadline
    xor periodicity
        periodic
        aperiodic
            sporadic ?
            
abstract resource_requirement
    eligible_resources -> resource +
    resource_identifier

abstract requirement
    xor deadline
        hard
        soft
        firm
    required_resources -> resource_requirement +
    [no res: required_resources.eligible_resources | res.resource_type.abstraction.COMPOSITE]

abstract task
    xor granularity
        terminal
        composite
    `timing
    priority
    preemptable ?
        cooperative ?
    `requirement
    task_objective : task_related_objective ?
    dependency ?
        token_type
        n_tokens
        sequence_dependent_setup_time

abstract scheduling_policy
    grouping ?
    xor ranking
        xor default
            ERT
            ED
            RM
            SJF
            FIFO
        user_defined

abstract scheduling_characteristic
    xor scheduling_characteristic_type
        online
        offline
    preemptive ?
    xor migration ?
        task_level
        job_level
    policy : scheduling_policy
    time_resolution
    xor priority_assignment
        fixed
        dynamic
    scheduling_window
    objective -> global_objective +
    
abstract or solver
    IBM_ILOG_CPLEX_Optimizer
    SCIP_SoPlex
    Knapsack
    SAS_OR_R

abstract DSLB
    name : string
    [name = "Domain-Specific Language Based"]

abstract DSB
    name : string
    [name = "Domain Structure Based"]

abstract or input
    `DSLB
    `DSB

abstract or output
    `DSLB
    `DSB

abstract scheduling_strategy
    `solver
    solver_meta_knowledge
    `input
    `output

abstract scheduler
    system -> resource +
    taskset -> task +
    properties : scheduling_characteristic 
    strategy : scheduling_strategy ?

// EXAMPLE-3: COMPLEX SCHEDULING APPLICATION
// Resources
cpu1 : resource
[cpu1.power_consumption.scalable.continuous && cpu1.mode.exclusive.capacity_based && cpu1.mode.exclusive.semantic_based && cpu1.resource_objective.criteria.resource_related_objective_criteria.power_consumption_criteria && !cpu1.resource_objective.criteria.resource_related_objective_criteria.utilization_criteria && !cpu1.resource_objective.criteria.resource_related_objective_criteria.throughput_criteria && cpu1.resource_objective.resource_objective_purpose.mini]
[cpu1.resource_type.abstraction.ACTIVE]
cpu2 : resource
[cpu2.power_consumption.scalable.discrete && cpu2.mode.exclusive.capacity_based && !cpu2.resource_objective ]
[cpu2.resource_type.abstraction.ACTIVE]
//CPUs : resource
//[! CPUs.power_consumption.scalable && CPUs.mode.exclusive.capacity_based && CPUs.resource_type.abstraction.COMPOSITE]

// Tasks
t1 : task
req1 : resource_requirement
[ req1.eligible_resources = cpu1 ]
[t1.requirement.required_resources = req1 && !t1.dependency && ! t1.task_objective && t1.timing.periodicity.periodic && t1.granularity.terminal && ! t1.preemptable && t1.requirement.deadline.soft]
t2 : task
req2 : resource_requirement
[ req2.eligible_resources = cpu2 ]
[t2.requirement.required_resources = req2 && t2.dependency && t2.task_objective.task_objective_purpose.mini && t2.task_objective.criteria.time_related_objective_criteria.centering && !t2.task_objective.criteria.time_related_objective_criteria.makespan && !t2.task_objective.criteria.time_related_objective_criteria.lateness && !t2.task_objective.criteria.time_related_objective_criteria.tardiness && !t2.task_objective.criteria.time_related_objective_criteria.earliness && t2.timing.periodicity.aperiodic && !t2.timing.periodicity.aperiodic.sporadic && t2.granularity.terminal && t2.preemptable.cooperative && t2.requirement.deadline.hard]

objective_gl : global_objective
[  objective_gl.purpose.mini &&
   !objective_gl.criteria.time_related_objective_criteria.tardiness && objective_gl.criteria.time_related_objective_criteria.makespan && !objective_gl.criteria.time_related_objective_criteria.lateness && !objective_gl.criteria.time_related_objective_criteria.earliness && !objective_gl.criteria.time_related_objective_criteria.centering ]

sched : scheduler
[ sched.taskset = t1 ++ t2 ]
[ sched.system = cpu1 ++ cpu2 ]
[ sched.properties.objective = objective_gl && sched.properties.policy.ranking.default.FIFO && !sched.properties.policy.grouping && sched.properties.scheduling_characteristic_type.offline && sched.properties.preemptive && sched.properties.priority_assignment.dynamic ]
[ !sched.strategy ]

