abstract xor objective_purpose
    maxi
    mini

abstract or time_related_objective_criteria
    makespan
    tardiness
    earliness
    lateness
    centering

abstract or resource_related_objective_criteria
    power_consumption
    utilization
    throughput

abstract or abstract_objective_criteria
    task_related_user_defined_criteria
    resource_related_user_defined_criteria

abstract task_related_objective
    purpose : objective_purpose
    or criteria
        `time_related_objective_criteria
        `abstract_objective_criteria
            [ task_related_user_defined_criteria && ! resource_related_user_defined_criteria]

abstract resource_related_objective
    purpose : objective_purpose
    or criteria
        `resource_related_objective_criteria
        `abstract_objective_criteria
            [ ! task_related_user_defined_criteria && resource_related_user_defined_criteria]

abstract global_objective
    purpose : objective_purpose
    or criteria
        `time_related_objective_criteria
        `resource_related_objective_criteria
        `abstract_objective_criteria

abstract resource
    capacity
    resource_type
        xor abstraction
            ACTIVE
            PASSIVE
            COMPOSITE
        identifier
    xor mode
        shared
        or exclusive
            capacity_based
            semantic_based
    power_consumption
        xor scalable ?
            discrete
            continuous
        [scalable => resource_type.abstraction.ACTIVE]
    objective : resource_related_objective ?

abstract timing
    release_time
    execution_time
    deadline
    xor periodicity
        periodic
        aperiodic
            sporadic ?
            
abstract resource_requirement
    eligible_resources -> resource +
    resource_identifier

abstract requirement
    xor deadline
        hard
        soft
        firm
    required_resources -> resource_requirement +
    [no res: required_resources.eligible_resources | res.resource_type.abstraction.COMPOSITE]

abstract data_dependency
    token_type
    n_tokens
    sequence_dependent_setup_time

abstract task
    `timing
    priority
    preemptable ?
        cooperative ?
    `requirement
    xor granularity
        terminal
        composite
    objective : task_related_objective ?
    dependency : data_dependency *

abstract scheduling_policy
    grouping ?
    xor ranking
        xor default
            ERT
            ED
            RM
            SJF
            FIFO
        user_defined

abstract scheduling_characteristic
    xor scheduling_characteristic_type
        online
        offline
    preemptive ?
    xor migration ?
        task_level
        job_level
    policy : scheduling_policy
    time_resolution
    xor priority_assignment
        fixed
        dynamic
    scheduling_window
    objective -> global_objective +
    
abstract or solver
    IBM_ILOG_CPLEX_Optimizer
    SCIP_SoPlex
    Knapsack
    SAS_OR_R

abstract DSLB
    name : string
    [name = "Domain-Specific Language Based"]

abstract DSB
    name : string
    [name = "Domain Structure Based"]

abstract or input
    `DSLB
    `DSB

abstract or output
    `DSLB
    `DSB

abstract scheduling_strategy
    `solver
    solver_meta_knowledge
    `input
    `output

abstract scheduler
    taskset -> task +
    system -> resource +
    properties : scheduling_characteristic 
    strategy : scheduling_strategy


// Resources
cpu1 : resource
[cpu1.power_consumption.scalable && cpu1.mode.exclusive.capacity_based && cpu1.objective.criteria.resource_related_objective_criteria.power_consumption && cpu1.objective.purpose.mini]
[cpu1.resource_type.abstraction.ACTIVE]
cpu2 : resource
[cpu2.power_consumption.scalable && cpu2.mode.exclusive.capacity_based && cpu2.objective.criteria.resource_related_objective_criteria.utilization && cpu2.objective.purpose.maxi]
[cpu2.resource_type.abstraction.ACTIVE]
CPUs : resource
[! CPUs.power_consumption.scalable && CPUs.mode.exclusive.capacity_based && CPUs.resource_type.abstraction.COMPOSITE]

// Tasks
t1 : task
req1 : resource_requirement
[ req1.eligible_resources = cpu1 ]
[t1.requirement.required_resources = req1 && ! t1.objective && t1.timing.periodicity.periodic && t1.granularity.terminal && ! t1.preemptable]
t2 : task
req2 : resource_requirement
[ req2.eligible_resources = cpu2 ]
[t2.requirement.required_resources = req2 && ! t2.objective && t2.timing.periodicity.aperiodic && t2.granularity.terminal && t2.preemptable]

objective_gl : global_objective
[ objective_gl.criteria.time_related_objective_criteria.tardiness ]

sched : scheduler
[ sched.taskset = t1 ++ t2 ]
[ sched.system = CPUs ++ cpu1 ++ cpu2 ]
[ sched.properties.objective = objective_gl ]
[ sched.strategy.solver.IBM_ILOG_CPLEX_Optimizer && sched.strategy.input.DSLB && sched.strategy.input.DSB && sched.strategy.output.DSLB && sched.strategy.output.DSB]